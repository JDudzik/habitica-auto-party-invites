import { defineConfig, globalIgnores } from 'eslint/config';
import { fixupConfigRules, fixupPluginRules } from '@eslint/compat';
import _import from 'eslint-plugin-import';
import globals from 'globals';
import path from 'node:path';
import { fileURLToPath } from 'node:url';
import js from '@eslint/js';
import { FlatCompat } from '@eslint/eslintrc';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const compat = new FlatCompat({
  baseDirectory: __dirname,
  recommendedConfig: js.configs.recommended,
  allConfig: js.configs.all,
});

export default defineConfig([
  globalIgnores([ 'data/**/*', 'logs/**/*', 'node_modules/**/*' ]),
  {
    extends: fixupConfigRules(compat.extends(
      'eslint:recommended',
    )),

    plugins: {
      'import': fixupPluginRules(_import),
    },

    languageOptions: {
      globals: {
        ...globals.node,
        React: 'writable',
      },
      sourceType: 'module',
      parserOptions: {
        ecmaFeatures: {
          module: true,
        },
      },
    },

    settings: {
      'import/resolver': {
        node: {
          paths: [ 'src' ],
        },
      },
    },

    rules: {
      'accessor-pairs': 'error',
      'array-bracket-newline': [ 'warn', 'consistent' ],
      'array-bracket-spacing': [ 'error', 'always', { 'objectsInArrays': false, 'singleValue': true, 'arraysInArrays': false }],
      'array-callback-return': [ 'error', { 'allowImplicit': true }],
      'arrow-body-style': [ 'off', 'as-needed' ],
      'arrow-parens': [ 'error', 'as-needed', { 'requireForBlockBody': true }],
      'arrow-spacing': 'error',
      'block-scoped-var': 'error',
      'block-spacing': 'warn',
      'brace-style': [ 'warn', '1tbs', { 'allowSingleLine': true }],
      'comma-dangle': [ 'error', 'always-multiline' ],
      'comma-spacing': 'error',
      'comma-style': 'warn',
      'complexity': [ 'warn', { 'max': 25 }],
      'consistent-this': [ 'error', 'self' ],
      'curly': 'error',
      'default-case-last': 'error',
      'default-case': 'error',
      'default-param-last': 'warn',
      'dot-location': [ 'error', 'property' ],
      'dot-notation': 'warn',
      'eqeqeq': 'error',
      'func-call-spacing': 'warn',
      'func-names': 'warn',
      'grouped-accessor-pairs': 'warn',
      'guard-for-in': 'warn',
      'implicit-arrow-linebreak': [ 'error', 'beside' ],
      'import/default': 'error',
      'import/export': 'error',
      'import/extensions': [ 'error', 'never' ],
      'import/newline-after-import': 'warn',
      'import/no-absolute-path': 'error',
      'import/no-amd': 'error',
      'import/no-cycle': [ 'error', { ignoreExternal: true }],
      'import/no-duplicates': 'error',
      'import/no-mutable-exports': 'error',
      'import/no-self-import': 'error',
      'indent': [ 'error', 2, { 'SwitchCase': 1 }],
      'jsx-quotes': 'warn',
      'key-spacing': [ 'warn', { 'mode': 'minimum' }],
      'linebreak-style': 'error',
      'max-len': [ 'warn', { 'code': 160, 'tabWidth': 2, 'ignoreComments': true, 'ignoreUrls': true, 'ignoreStrings': true, 'ignoreTemplateLiterals': true, 'ignoreRegExpLiterals': true }],
      'newline-per-chained-call': [ 'warn', { 'ignoreChainWithDepth': 3 }],
      'no-alert': 'warn',
      'no-array-constructor': 'error',
      'no-bitwise': 'error',
      'no-caller': 'error',
      'no-confusing-arrow': [ 'warn', { 'allowParens': true }],
      'no-else-return': 'error',
      'no-empty-function': [ 'warn', { 'allow': [ 'arrowFunctions' ]}],
      'no-eval': 'error',
      'no-extend-native': 'error',
      'no-extra-bind': 'error',
      'no-extra-label': 'error',
      'no-extra-semi': 'error',
      'no-floating-decimal': 'error',
      'no-implicit-coercion': [ 'error', { 'boolean': false, 'allow': [ '!!' ]}],
      'no-implicit-globals': 'error',
      'no-implied-eval': 'error',
      'no-invalid-this': 'error',
      'no-iterator': 'error',
      'no-labels': 'error',
      'no-lone-blocks': 'warn',
      'no-lonely-if': 'error',
      'no-loop-func': 'warn',
      'no-loss-of-precision': 'error',
      'no-mixed-operators': 'warn',
      'no-multi-assign': 'error',
      'no-multi-spaces': [ 'warn', { 'ignoreEOLComments': true, 'exceptions': { 'ArrayExpression': true }}],
      'no-multi-str': 'error',
      'no-multiple-empty-lines': [ 'warn', { 'max': 3, 'maxEOF': 1, 'maxBOF': 1 }],
      'no-new-func': 'error',
      'no-new-object': 'error',
      'no-new-wrappers': 'error',
      'no-new': 'error',
      'no-octal-escape': 'error',
      'no-param-reassign': 'error',
      'no-plusplus': 'off',
      'no-proto': 'error',
      'no-script-url': 'error',
      'no-self-compare': 'error',
      'no-sequences': 'error',
      'no-tabs': 'error',
      'no-template-curly-in-string': 'error',
      'no-unneeded-ternary': 'warn',
      'no-unreachable-loop': 'error',
      'no-unused-expressions': 'error',
      'no-unused-vars': [ 'warn', { 'args': 'after-used', 'argsIgnorePattern': '^_', 'destructuredArrayIgnorePattern': '^_', 'ignoreRestSiblings': true }],
      'no-use-before-define': [ 'error', { 'functions': false }],
      'no-useless-backreference': 'warn',
      'no-useless-call': 'error',
      'no-useless-catch': 'error',
      'no-useless-computed-key': 'error',
      'no-useless-concat': 'warn',
      'no-useless-constructor': 'warn',
      'no-var': 'error',
      'no-void': 'warn',
      'no-whitespace-before-property': 'error',
      'object-curly-spacing': [ 'error', 'always', { 'arraysInObjects': false, 'objectsInObjects': false }],
      'one-var-declaration-per-line': 'error',
      'one-var': [ 'error', 'never' ],
      'prefer-arrow-callback': 'error',
      'prefer-const': 'warn',
      'prefer-object-spread': 'error',
      'prefer-promise-reject-errors': 'error',
      'prefer-regex-literals': 'error',
      'prefer-rest-params': 'error',
      'prefer-spread': 'error',
      'prefer-template': 'error',
      'quotes': [ 'warn', 'single' ],
      'radix': 'warn',
      'require-atomic-updates': [ 'error', { 'allowProperties': true }],
      'require-await': 'warn',
      'rest-spread-spacing': 'error',
      'semi-spacing': 'error',
      'semi-style': 'error',
      'semi': 'error',
      'space-before-blocks': 'warn',
      'space-before-function-paren': [ 'warn', { 'asyncArrow': 'always', 'anonymous': 'always', 'named': 'never' }],
      'space-infix-ops': 'error',
      'spaced-comment': [ 'error', 'always' ],
      'template-curly-spacing': [ 'error', 'always' ],
      'template-tag-spacing': 'error',
      'yoda': [ 'error', 'never', { 'exceptRange': true }],
    },
  },
]);